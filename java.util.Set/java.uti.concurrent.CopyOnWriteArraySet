
* nutzt CopyOnWriteArrayList
* für kleine größe, readonly und thread safe iteratoren
* veränderne Operationen teuer, weil das gesamte interne Array kopierte werden muss
* iterator arbeitet mit snapshots und unzerstützt keine verändernden Operationen
* thread safe und fail fast
... an sich siehe CopyOnWriteArrayList

TODO: Set Eigenschaft verlangt, dass das Set distinct ist
CopyOnWriteArrayList.addIfAbsent(E e) wird genutzt ... schaut verdammt teuer aus
